/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafico1;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author Harold
 */
public class Lienzo1 extends javax.swing.JPanel implements Runnable {

    int xOval =0 ;
    int yOval = 0;
    int wOval = 30;
    int hOval = 30;
    int wRect = 50;
    int hRect = 50;
    int x1Rect = 50;
    int x2Rect =  x1Rect + wRect;
    int w1 = x1Rect;
    Thread hilo;
    
    public Lienzo1() {
        initComponents();
        hilo =  new Thread(this);
        
    }
    
    @Override
    public void paint(Graphics g){
        g.setColor(getBackground());
        g.fillRect(0, 0, getWidth(), getHeight());
        g.setColor(Color.black);
        g.drawLine(getWidth()/2,0,getWidth()/2,getHeight());
        g.setColor(Color.blue);
        g.fillOval(xOval, yOval, wOval, hOval);
        
        g.drawRect( x1Rect, getHeight()-hRect, wRect, hRect );
        //linea del medio eje x
        
      //  g.drawRect( getWidth()/2-wRect/2, getHeight()-hRect, wRect, hRect );
        
        System.out.println("xOval = " + xOval );
        System.out.println("yOval =" + yOval);
    }
    
    
    public void inicio(){
        hilo.start();
    }
    
    public void pausa(){
        hilo.suspend();
    }
    
    public void  continuar(){
        hilo.resume();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        yOval = getHeight()-hOval;
        //xRect = getWidth()/2;
        System.out.println("valor en run de y :  " + yOval);
        System.out.println("valor de x1rect " + x1Rect);
        try{
          while(true){
              //recorre eje x de izd a drcha
                while(xOval<=getWidth()-wOval ){
                  
                  
                    while(xOval>=x1Rect - wOval && yOval <= getHeight()-hOval  && xOval<= x1Rect){
                        if(yOval<=getHeight()-hRect-hOval){
                            break;
                        }
                        Thread.sleep(100);
                        yOval -= 10;
                        repaint();
                    }

                    while(yOval<=getHeight()-hRect-hOval &&  xOval >= x1Rect  - wOval &&  xOval<= x2Rect){
                          
                          if(xOval>= x2Rect){
                              break;
                          }
                          Thread.sleep(100);
                          xOval += 10;
                          repaint();
                    }
                        
                    while(xOval >= x2Rect && yOval<= getHeight() - hOval){
         
                                if(yOval >= getHeight()- hOval){
                                    break;
                                }
                                Thread.sleep(100);
                                yOval += 10;
                                repaint();
                                /*if(x>= getWidth()/2 + wRect/2){
                                    break;
                                }*/
                                
                    }
                    
                    if(xOval>= getWidth()-wOval ){
                        break;
                    }
                  Thread.sleep(50);
                  xOval += 10;
                  repaint();
                  
                }
              
              
              
              // recorre eje y de abajo a arriba 
              while(yOval>0){
                  Thread.sleep(50);
                  yOval -= 10;
                  repaint();
                  
              }
              
              //recorre eje x de drcha a izq
              while(xOval>0){
                  Thread.sleep(50);
                  xOval -= 10;
                  repaint();
              }
              //recorre eje y de arriba a abajo
              while(yOval<getHeight()-wOval){
                  Thread.sleep(50);
                  yOval += 10;
                  repaint();
              }
          }  
        }catch(Exception e){
            System.out.println(e);
        }
    }
}
