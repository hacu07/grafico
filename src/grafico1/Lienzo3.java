/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafico1;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import grafico1.Ventana2;

/**
 *
 * @author Harold
 */
public class Lienzo3 extends javax.swing.JPanel implements Runnable {
    
    //Posicion donde aparecera el Ovalo en coordenadas x
    int xOval =0 ;
    //Posicion donde aparece el Ovalo en coordenadas Y
    int yOval = 0;
    //Ancho del Ovalo
    int wOval = 10;
    //Alto del Ovalo
    int hOval = 10;
    //Ancho del rectangulo
    int wRect = 50 ;
    //Alto del rectangulo
    int hRect = 10;
    //Posicion en el eje x donde aparecera el rectangulo
    int x1Rect = 250;
    //Posicion en el eje x donde terminar el anchor del rectangulo
    int x2Rect =  x1Rect + wRect;
    //Recursos (img) que se usan para ambientar el mundo de mario bross
    ImageIcon imgFondo;
    ImageIcon imgMario;
    ImageIcon imgTunel;
    
    
    int w1 = x1Rect;
    
    //Hilo que ejecutara la animacion
    Thread hilo;
    
    public Lienzo3() {
        initComponents();
        hilo =  new Thread(this);
        imgFondo =  new ImageIcon(new ImageIcon(getClass().getResource("img/fondo.gif")).getImage());
        imgMario =  new ImageIcon(new ImageIcon(getClass().getResource("img/Mario.gif")).getImage());
        imgTunel =  new ImageIcon(new ImageIcon(getClass().getResource("img/tunel.png")).getImage());
    }
    
    @Override
    public void paint(Graphics g){
        g.setColor(getBackground());
        //Fondo contenedor 
        g.drawImage(imgFondo.getImage(),0, 0, getWidth(), getHeight(),null);
        //g.setColor(Color.black);
        //linea que marca la mitad del panel
        //g.drawLine(getWidth()/2,0,getWidth()/2,getHeight());
        g.setColor(Color.blue);
        //Ovalo
        g.fillOval(xOval, yOval, wOval, hOval);
        //Rectangulo obstaculo
        g.setColor(Color.red);
        g.fillRect( x1Rect, getHeight()-hRect, wRect, hRect );
        g.drawImage(imgTunel.getImage(), x1Rect, getHeight()-hRect, wRect, hRect,null );
        
        //Imagen 
        
        g.drawImage(imgMario.getImage(), xOval ,  yOval ,wOval ,hOval, null);
        
        //Coordenadas del Ovalo 
        System.out.println("xOval = " + xOval );
        System.out.println("yOval =" + yOval);
        
    }
    
    
    
    public void inicio(){
        hilo.start();
    }
    
    public void pausa(){
        hilo.suspend();
    }
    
    public void  continuar(){
        hilo.resume();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 444, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        
        yOval = getHeight()-hOval;
        //xRect = getWidth()/2;
        System.out.println("valor en run de y :  " + yOval);
        System.out.println("valor de x1rect " + x1Rect);
        System.out.println("valor de xrect"+x1Rect);
        try{
            while(true){
              //recorre eje x de izd a drcha
                while(xOval<=getWidth()-wOval ){
                  
                  
                    while(xOval>=x1Rect - wOval && yOval <= getHeight()-hOval  && xOval<= x1Rect){
                        if(yOval<=getHeight()-hRect-hOval){
                            break;
                        }
                        Thread.sleep(100);
                        yOval -= 10;
                        repaint();
                    }

                    while(yOval<=getHeight()-hRect-hOval &&  xOval >= x1Rect  - wOval &&  xOval<= x2Rect){
                          
                          if(xOval>= x2Rect){
                              break;
                          }
                          Thread.sleep(100);
                          xOval += 10;
                          repaint();
                    }
                        
                    while(xOval >= x2Rect && yOval<= getHeight() - hOval){
         
                                if(yOval >= getHeight()- hOval){
                                    break;
                                }
                                Thread.sleep(100);
                                yOval += 10;
                                repaint();
                                /*if(x>= getWidth()/2 + wRect/2){
                                    break;
                                }*/
                                
                    }
                    
                    if(xOval>= getWidth()-wOval-10 ){
                        break;
                    }
                  Thread.sleep(50);
                  xOval += 10;
                  repaint();
                  
                }
              
              
              
              // recorre eje y de abajo a arriba 
              while(yOval>10){
                  Thread.sleep(50);
                  yOval -= 10;
                  repaint();
                  
              }
              
              //recorre eje x de drcha a izq
              while(xOval>0){
                  Thread.sleep(50);
                  xOval -= 10;
                  repaint();
              }
              //recorre eje y de arriba a abajo
              while(yOval<getHeight()-wOval){
                  Thread.sleep(50);
                  yOval += 10;
                  repaint();
               }
            }  
        }catch(Exception e){
            System.out.println(e);
        }
    }

    public int getwRect() {
        return wRect;
    }

    public void setwRect(int wRect) {
        this.wRect = wRect;
    }

    public int gethRect() {
        return hRect;
    }

    public void sethRect(int hRect) {
        this.hRect = hRect;
    }

    public int getX1Rect() {
        return x1Rect;
    }

    public void setX1Rect(int x1Rect) {
        this.x1Rect = x1Rect;
    }
    
    
    
}
